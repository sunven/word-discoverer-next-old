{"version":3,"file":"adjust.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,GAAG,yBAAyB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAAe,oCAAU;AACzB;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChKO;AACP,sBAAsB,mCAAmC;AACzD,0CAA0C,wBAAwB;AAClE,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,qBAAqB;AACjC,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEO;AACP;AACA;AACA,kDAAkD;AAClD;AACA,kCAAkC,2BAA2B;AAC7D,6CAA6C,iBAAiB;AAC9D;AACA,+BAA+B,eAAe;AAC9C;AACA;;AAEO;AACP;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,uBAAuB,MAAM;AAC7B;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;ACnuBAAuB,cAAc;AACrC;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA,IAAI,gEAAmB;AACvB;AACA;;AAEO;AACP;AACA,EAAE,wDAAU;AACZ;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC,+CAA+C,OAAO;AACtD,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,GAAG;AACH;;;;;;;SC3QA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;;;ACN8D;AACkB;AAChD;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC,cAAc,qBAAqB;AACnC,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD,6DAA6D,SAAS;AACtE;AACA,gCAAgC,WAAW;AAC3C,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,MAAM,2BAA2B;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,cAAc,SAAS,8BAA8B;AAC7E,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,6BAA6B,YAAY,kBAAkB,cAAc;AACzE,6BAA6B,8BAA8B;AAC3D;AACA,8BAA8B,WAAW;AACzC;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C,kBAAkB,gBAAgB;AAC9E,IAAI,uDAAM;AACV,GAAG;AACH;;AAEA;AACA;AACA,MAAM,2CAA2C;AACjD,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0DAAa;AACxD;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C,uBAAuB,KAAK,mBAAmB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C,EAAE,oEAAgB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+BAA+B;AACxD,6BAA6B,iBAAiB;AAC9C,EAAE,oEAAgB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,uBAAuB,KAAK,mBAAmB;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA,oBAAoB,8BAA8B;AAClD;AACA,sDAAsD,MAAM;AAC5D,iCAAiC,MAAM,IAAI,qBAAqB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C;AACA,oBAAoB,8BAA8B;AAClD,4BAA4B,MAAM,IAAI,qBAAqB;AAC3D,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C,oBAAoB,8BAA8B;AAClD,4BAA4B,gBAAgB,IAAI,qBAAqB;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD,WAAW;;AAEX;AACA;AACA;AACA,8BAA8B,4EAAyB;AACvD,uCAAuC,iBAAiB;AACxD,YAAY,oEAAgB;AAC5B;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD,WAAW;;AAEX;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,EAAE,6DAAgB;AAClB;AACA,CAAC","sources":["webpack:///./src/FileSaver.js","webpack:///./src/common_lib.js","webpack:///./src/context_menu_lib.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/adjust.js"],"sourcesContent":["/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/* jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source https://github.com/eligrey/FileSaver.js/blob/master/dist/FileSaver.js */\n\nconst view = window\nconst doc = view.document\n// only get URL when necessary in case Blob.js hasn't overridden it yet\nconst get_URL = function () {\n  return view.URL || view.webkitURL || view\n}\nconst save_link = doc.createElementNS('http://www.w3.org/1999/xhtml', 'a')\nconst can_use_save_link = 'download' in save_link\nconst click = function (node) {\n  const event = new MouseEvent('click')\n  node.dispatchEvent(event)\n}\nconst is_safari = /constructor/i.test(view.HTMLElement) || view.safari\nconst is_chrome_ios = /CriOS\\/[\\d]+/.test(navigator.userAgent)\nconst throw_outside = function (ex) {\n  ;(view.setImmediate || view.setTimeout)(function () {\n    throw ex\n  }, 0)\n}\nconst force_saveable_type = 'application/octet-stream'\n// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\nconst arbitrary_revoke_timeout = 1000 * 40 // in ms\nconst revoke = function (file) {\n  const revoker = function () {\n    if (typeof file === 'string') {\n      // file is an object URL\n      get_URL().revokeObjectURL(file)\n    } else {\n      // file is a File\n      file.remove()\n    }\n  }\n  setTimeout(revoker, arbitrary_revoke_timeout)\n}\nconst dispatch = function (filesaver, event_types, event) {\n  event_types = [].concat(event_types)\n  let i = event_types.length\n  while (i--) {\n    const listener = filesaver[`on${event_types[i]}`]\n    if (typeof listener === 'function') {\n      try {\n        listener.call(filesaver, event || filesaver)\n      } catch (ex) {\n        throw_outside(ex)\n      }\n    }\n  }\n}\nconst auto_bom = function (blob) {\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (\n    /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(\n      blob.type,\n    )\n  ) {\n    return new Blob([String.fromCharCode(0xfeff), blob], {\n      type: blob.type,\n    })\n  }\n  return blob\n}\nconst FileSaver = function (blob, name, no_auto_bom) {\n  if (!no_auto_bom) {\n    blob = auto_bom(blob)\n  }\n  // First try a.download, then web filesystem, then object URLs\n  const filesaver = this\n  const { type } = blob\n  const force = type === force_saveable_type\n  let object_url\n  const dispatch_all = function () {\n    dispatch(filesaver, 'writestart progress write writeend'.split(' '))\n  }\n  // on any filesys errors revert to saving with object URLs\n  const fs_error = function () {\n    if ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n      // Safari doesn't allow downloading of blob urls\n      const reader = new FileReader()\n      reader.onloadend = function () {\n        let url = is_chrome_ios\n          ? reader.result\n          : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        const popup = view.open(url, '_blank')\n        if (!popup) view.location.href = url\n        url = undefined // release reference before dispatching\n        filesaver.readyState = filesaver.DONE\n        dispatch_all()\n      }\n      reader.readAsDataURL(blob)\n      filesaver.readyState = filesaver.INIT\n      return\n    }\n    // don't create more object URLs than needed\n    if (!object_url) {\n      object_url = get_URL().createObjectURL(blob)\n    }\n    if (force) {\n      view.location.href = object_url\n    } else {\n      const opened = view.open(object_url, '_blank')\n      if (!opened) {\n        // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n        view.location.href = object_url\n      }\n    }\n    filesaver.readyState = filesaver.DONE\n    dispatch_all()\n    revoke(object_url)\n  }\n  filesaver.readyState = filesaver.INIT\n\n  if (can_use_save_link) {\n    object_url = get_URL().createObjectURL(blob)\n    setTimeout(function () {\n      save_link.href = object_url\n      save_link.download = name\n      click(save_link)\n      dispatch_all()\n      revoke(object_url)\n      filesaver.readyState = filesaver.DONE\n    })\n    return\n  }\n\n  fs_error()\n}\nconst FS_proto = FileSaver.prototype\n\nFS_proto.abort = function () {}\nFS_proto.readyState = FS_proto.INIT = 0\nFS_proto.WRITING = 1\nFS_proto.DONE = 2\n\nFS_proto.error =\n  FS_proto.onwritestart =\n  FS_proto.onprogress =\n  FS_proto.onwrite =\n  FS_proto.onabort =\n  FS_proto.onerror =\n  FS_proto.onwriteend =\n    null\n\nexport default function (blob, name, no_auto_bom) {\n  return new FileSaver(blob, name || blob.name || 'download', no_auto_bom)\n}\n// return saveAs;\n","export function request_unhighlight(lemma) {\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    chrome.tabs.sendMessage(tabs[0].id, { wdm_unhighlight: lemma })\n  })\n}\n\nexport function make_id_suffix(text) {\n  const before = btoa(text)\n  const after = before\n    .replace(/\\+/g, '_')\n    .replace(/\\//g, '-')\n    .replace(/=/g, '_')\n  return after\n}\n\nexport function sync_if_needed() {\n  const req_keys = ['wd_last_sync', 'wd_gd_sync_enabled', 'wd_last_sync_error']\n  chrome.storage.local.get(req_keys, function (result) {\n    const { wd_last_sync } = result\n    const { wd_gd_sync_enabled } = result\n    const { wd_last_sync_error } = result\n    if (!wd_gd_sync_enabled || wd_last_sync_error != null) {\n      return\n    }\n    const cur_date = new Date()\n    const mins_passed = (cur_date.getTime() - wd_last_sync) / (60 * 1000)\n    const sync_period_mins = 30\n    if (mins_passed >= sync_period_mins) {\n      chrome.runtime.sendMessage({\n        wdm_request: 'gd_sync',\n        interactive_mode: false,\n      })\n    }\n  })\n}\n\nexport function add_lexeme(lexeme, result_handler) {\n  const req_keys = [\n    'words_discoverer_eng_dict',\n    'wd_idioms',\n    'wd_user_vocabulary',\n    'wd_user_vocab_added',\n    'wd_user_vocab_deleted',\n  ]\n  chrome.storage.local.get(req_keys, function (result) {\n    const dict_words = result.words_discoverer_eng_dict\n    const dict_idioms = result.wd_idioms\n    const user_vocabulary = result.wd_user_vocabulary\n    const { wd_user_vocab_added } = result\n    const { wd_user_vocab_deleted } = result\n    if (lexeme.length > 100) {\n      result_handler('bad', undefined)\n      return\n    }\n    lexeme = lexeme.toLowerCase()\n    lexeme = lexeme.trim()\n    if (!lexeme) {\n      result_handler('bad', undefined)\n      return\n    }\n\n    let key = lexeme\n    if (dict_words.hasOwnProperty(lexeme)) {\n      const wf = dict_words[lexeme]\n      if (wf) {\n        const [first] = wf\n        key = first\n      }\n    } else if (dict_idioms.hasOwnProperty(lexeme)) {\n      const wf = dict_idioms[lexeme]\n      if (wf && wf !== -1) {\n        key = wf\n      }\n    }\n\n    if (user_vocabulary.hasOwnProperty(key)) {\n      result_handler('exists', key)\n      return\n    }\n\n    const new_state = { wd_user_vocabulary: user_vocabulary }\n\n    user_vocabulary[key] = 1\n    if (typeof wd_user_vocab_added !== 'undefined') {\n      wd_user_vocab_added[key] = 1\n      new_state.wd_user_vocab_added = wd_user_vocab_added\n    }\n    if (typeof wd_user_vocab_deleted !== 'undefined') {\n      delete wd_user_vocab_deleted[key]\n      new_state.wd_user_vocab_deleted = wd_user_vocab_deleted\n    }\n\n    chrome.storage.local.set(new_state, function () {\n      sync_if_needed()\n      result_handler('ok', key)\n    })\n  })\n}\n\nexport function make_hl_style(hl_params) {\n  if (!hl_params.enabled) return undefined\n  let result = ''\n  if (hl_params.bold) result += 'font-weight:bold;'\n  if (hl_params.useBackground)\n    result += `background-color:${hl_params.backgroundColor};`\n  if (hl_params.useColor) result += `color:${hl_params.color};`\n  if (!result) return undefined\n  result += 'font-size:inherit;display:inline;'\n  return result\n}\n\nexport function localizeHtmlPage() {\n  // Localize by replacing __MSG_***__ meta tags\n  const objects = document.getElementsByTagName('html')\n  for (let j = 0; j < objects.length; j++) {\n    const obj = objects[j]\n    const valStrH = obj.innerHTML.toString()\n    const valNewH = valStrH.replace(/__MSG_(\\w+)__/g, function (match, v1) {\n      return v1 ? chrome.i18n.getMessage(v1) : ''\n    })\n    if (valNewH !== valStrH) {\n      obj.innerHTML = valNewH\n    }\n  }\n}\n\nexport function spformat(src, ...args) {\n  // const args = Array.prototype.slice.call(arguments, 1)\n  return src.replace(/{(\\d+)}/g, function (match, number) {\n    return typeof args[number] !== 'undefined' ? args[number] : match\n  })\n}\n","import { request_unhighlight, add_lexeme } from './common_lib'\n\nconst isoLangs = {\n  ab: 'Abkhaz',\n  aa: 'Afar',\n  af: 'Afrikaans',\n  ak: 'Akan',\n  sq: 'Albanian',\n  am: 'Amharic',\n  ar: 'Arabic',\n  an: 'Aragonese',\n  hy: 'Armenian',\n  as: 'Assamese',\n  av: 'Avaric',\n  ae: 'Avestan',\n  ay: 'Aymara',\n  az: 'Azerbaijani',\n  bm: 'Bambara',\n  ba: 'Bashkir',\n  eu: 'Basque',\n  be: 'Belarusian',\n  bn: 'Bengali',\n  bh: 'Bihari',\n  bi: 'Bislama',\n  bs: 'Bosnian',\n  br: 'Breton',\n  bg: 'Bulgarian',\n  my: 'Burmese',\n  ca: 'Catalan',\n  ch: 'Chamorro',\n  ce: 'Chechen',\n  ny: 'Chichewa',\n  zh: 'Chinese',\n  cv: 'Chuvash',\n  kw: 'Cornish',\n  co: 'Corsican',\n  cr: 'Cree',\n  hr: 'Croatian',\n  cs: 'Czech',\n  da: 'Danish',\n  dv: 'Divehi',\n  nl: 'Dutch',\n  en: 'English',\n  eo: 'Esperanto',\n  et: 'Estonian',\n  ee: 'Ewe',\n  fo: 'Faroese',\n  fj: 'Fijian',\n  fi: 'Finnish',\n  fr: 'French',\n  ff: 'Fula',\n  gl: 'Galician',\n  ka: 'Georgian',\n  de: 'German',\n  el: 'Greek',\n  gu: 'Gujarati',\n  ht: 'Haitian',\n  ha: 'Hausa',\n  he: 'Hebrew',\n  hz: 'Herero',\n  hi: 'Hindi',\n  ho: 'Hiri Motu',\n  hu: 'Hungarian',\n  ia: 'Interlingua',\n  id: 'Indonesian',\n  ie: 'Interlingue',\n  ga: 'Irish',\n  ig: 'Igbo',\n  ik: 'Inupiaq',\n  io: 'Ido',\n  is: 'Icelandic',\n  it: 'Italian',\n  iu: 'Inuktitut',\n  ja: 'Japanese',\n  jv: 'Javanese',\n  kl: 'Kalaallisut',\n  kn: 'Kannada',\n  kr: 'Kanuri',\n  ks: 'Kashmiri',\n  kk: 'Kazakh',\n  km: 'Khmer',\n  ki: 'Kikuyu',\n  rw: 'Kinyarwanda',\n  ky: 'Kirghiz',\n  kv: 'Komi',\n  kg: 'Kongo',\n  ko: 'Korean',\n  ku: 'Kurdish',\n  kj: 'Kwanyama',\n  la: 'Latin',\n  lb: 'Luxembourgish',\n  lg: 'Luganda',\n  li: 'Limburgish',\n  ln: 'Lingala',\n  lo: 'Lao',\n  lt: 'Lithuanian',\n  lu: 'Luba-Katanga',\n  lv: 'Latvian',\n  gv: 'Manx',\n  mk: 'Macedonian',\n  mg: 'Malagasy',\n  ms: 'Malay',\n  ml: 'Malayalam',\n  mt: 'Maltese',\n  mh: 'Marshallese',\n  mn: 'Mongolian',\n  na: 'Nauru',\n  nv: 'Navajo',\n  nd: 'Ndebele',\n  ne: 'Nepali',\n  ng: 'Ndonga',\n  nn: 'Norwegian',\n  no: 'Norwegian',\n  ii: 'Nuosu',\n  nr: 'Ndebele',\n  oc: 'Occitan',\n  oj: 'Ojibwe',\n  om: 'Oromo',\n  or: 'Oriya',\n  os: 'Ossetian',\n  pa: 'Panjabi',\n  fa: 'Persian',\n  pl: 'Polish',\n  ps: 'Pashto',\n  pt: 'Portuguese',\n  qu: 'Quechua',\n  rm: 'Romansh',\n  rn: 'Kirundi',\n  ro: 'Romanian',\n  ru: 'Russian',\n  sc: 'Sardinian',\n  sd: 'Sindhi',\n  se: 'Sami',\n  sm: 'Samoan',\n  sg: 'Sango',\n  sr: 'Serbian',\n  gd: 'Gaelic',\n  sn: 'Shona',\n  si: 'Sinhala',\n  sk: 'Slovak',\n  sl: 'Slovene',\n  so: 'Somali',\n  st: 'Sotho',\n  es: 'Spanish',\n  su: 'Sundanese',\n  sw: 'Swahili',\n  ss: 'Swati',\n  sv: 'Swedish',\n  ta: 'Tamil',\n  te: 'Telugu',\n  tg: 'Tajik',\n  th: 'Thai',\n  ti: 'Tigrinya',\n  bo: 'Tibetan',\n  tk: 'Turkmen',\n  tl: 'Tagalog',\n  tn: 'Tswana',\n  to: 'Tonga',\n  tr: 'Turkish',\n  ts: 'Tsonga',\n  tt: 'Tatar',\n  tw: 'Twi',\n  ty: 'Tahitian',\n  ug: 'Uighur',\n  uk: 'Ukrainian',\n  ur: 'Urdu',\n  uz: 'Uzbek',\n  ve: 'Venda',\n  vi: 'Vietnamese',\n  wa: 'Walloon',\n  cy: 'Welsh',\n  wo: 'Wolof',\n  fy: 'Frisian',\n  xh: 'Xhosa',\n  yi: 'Yiddish',\n  yo: 'Yoruba',\n  za: 'Zhuang',\n}\n\nexport function get_dict_definition_url(dictUrl, text) {\n  return dictUrl + encodeURIComponent(text)\n}\n\nexport function showDefinition(dictUrl, text) {\n  const fullUrl = get_dict_definition_url(dictUrl, text)\n  chrome.tabs.create({ url: fullUrl }, function (tab) {\n    // opens definition in a new tab\n  })\n}\n\nexport function createDictionaryEntry(title, dictUrl, entryId) {\n  chrome.contextMenus.create({\n    title,\n    contexts: ['selection'],\n    id: entryId,\n    // onclick: function (info, tab) {\n    //   var word = info.selectionText\n    //   showDefinition(dictUrl, word)\n    // },\n  })\n  chrome.contextMenus.onClicked.addListener(function (info, tab) {\n    const word = info.selectionText\n    showDefinition(dictUrl, word)\n  })\n}\n\nexport function context_handle_add_result(report, lemma) {\n  if (report === 'ok') {\n    request_unhighlight(lemma)\n  }\n}\n\nexport function onClickHandler(info, tab) {\n  const word = info.selectionText\n  add_lexeme(word, context_handle_add_result)\n}\n\nexport function make_default_online_dicts() {\n  const result = []\n\n  let uiLang = chrome.i18n.getUILanguage()\n  uiLang = uiLang.split('-')[0]\n  if (uiLang !== 'en' && isoLangs.hasOwnProperty(uiLang)) {\n    const langName = isoLangs[uiLang]\n    result.push({\n      title: `Translate to ${langName} in Google`,\n      url: `https://translate.google.com/#en/${uiLang}/`,\n    })\n  }\n  result.push({\n    title: 'Define in Merriam-Webster',\n    url: 'https://www.merriam-webster.com/dictionary/',\n  })\n  result.push({\n    title: 'Define in Google',\n    url: 'https://encrypted.google.com/search?hl=en&gl=en&q=define:',\n  })\n  result.push({\n    title: 'View pictures in Google',\n    url: 'https://encrypted.google.com/search?hl=en&gl=en&tbm=isch&q=',\n  })\n  return result\n}\n\nexport function initContextMenus(dictPairs) {\n  chrome.contextMenus.removeAll(function () {\n    const title = chrome.i18n.getMessage('menuItem')\n    chrome.contextMenus.create({\n      title,\n      contexts: ['selection'],\n      id: 'vocab_select_add',\n      // onclick: onClickHandler,\n    })\n    chrome.contextMenus.onClicked.addListener(onClickHandler)\n    chrome.contextMenus.create({\n      type: 'separator',\n      contexts: ['selection'],\n      id: 'wd_separator_id',\n    })\n    for (let i = 0; i < dictPairs.length; ++i) {\n      createDictionaryEntry(\n        dictPairs[i].title,\n        dictPairs[i].url,\n        `wd_define_${i}`,\n      )\n    }\n  })\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { localizeHtmlPage, make_hl_style } from './common_lib'\nimport { initContextMenus, make_default_online_dicts } from './context_menu_lib'\nimport saveAs from './FileSaver'\n\nlet wd_hl_settings = null\nlet wd_hover_settings = null\nlet wd_online_dicts = null\nlet wd_enable_tts = false\n\nconst wc_rb_ids = ['wc1', 'wc2', 'wc3', 'wc4', 'wc5']\nconst ic_rb_ids = ['ic1', 'ic2', 'ic3', 'ic4', 'ic5']\nconst wb_rb_ids = ['wb1', 'wb2', 'wb3', 'wb4', 'wb5']\nconst ib_rb_ids = ['ib1', 'ib2', 'ib3', 'ib4', 'ib5']\n\nconst hover_popup_types = ['never', 'key', 'always']\nconst target_types = ['hl', 'ow']\n\nfunction display_sync_interface() {\n  chrome.storage.local.get(\n    ['wd_gd_sync_enabled', 'wd_last_sync_error', 'wd_last_sync'],\n    function (result) {\n      const { wd_last_sync_error } = result\n      const { wd_gd_sync_enabled } = result\n      const { wd_last_sync } = result\n      if (!wd_gd_sync_enabled) {\n        document.getElementById('gdStopSyncButton').style.display = 'none'\n        document.getElementById('syncStatusFeedback').style.display = 'none'\n        return\n      }\n      document.getElementById('gdStopSyncButton').style.display = 'inline-block'\n      document.getElementById('syncStatusFeedback').style.display = 'inline'\n      if (wd_last_sync_error != null) {\n        document.getElementById('syncStatusFeedback').textContent =\n          `Error: ${wd_last_sync_error}`\n      } else {\n        document.getElementById('syncStatusFeedback').textContent =\n          'Synchronized.'\n      }\n      if (typeof wd_last_sync !== 'undefined') {\n        const cur_date = new Date()\n        let seconds_passed = (cur_date.getTime() - wd_last_sync) / 1000\n        const p_days = Math.floor(seconds_passed / (3600 * 24))\n        seconds_passed %= 3600 * 24\n        const p_hours = Math.floor(seconds_passed / 3600)\n        seconds_passed %= 3600\n        const p_minutes = Math.floor(seconds_passed / 60)\n        const p_seconds = Math.floor(seconds_passed % 60)\n        let passed_time_msg = ''\n        if (p_days > 0) passed_time_msg += `${p_days} days, `\n        if (p_hours > 0 || p_days > 0) passed_time_msg += `${p_hours} hours, `\n        if (p_minutes > 0 || p_hours > 0 || p_days > 0)\n          passed_time_msg += `${p_minutes} minutes, `\n        passed_time_msg += `${p_seconds} seconds since the last sync.`\n        const syncDateLabel = document.getElementById('lastSyncDate')\n        syncDateLabel.style.display = 'inline'\n        syncDateLabel.textContent = passed_time_msg\n      }\n    },\n  )\n}\n\nfunction synchronize_now() {\n  chrome.runtime.onMessage.addListener(\n    function (request, sender, sendResponse) {\n      if (request.sync_feedback) {\n        display_sync_interface()\n      }\n    },\n  )\n  document.getElementById('syncStatusFeedback').style.display = 'inline'\n  document.getElementById('syncStatusFeedback').textContent =\n    'Synchronization started...'\n  chrome.storage.local.set({ wd_gd_sync_enabled: true }, function () {\n    chrome.runtime.sendMessage({\n      wdm_request: 'gd_sync',\n      interactive_mode: true,\n    })\n  })\n}\n\nfunction request_permissions_and_sync() {\n  chrome.permissions.request({ origins: ['https://*/*'] }, function (granted) {\n    if (!granted) return\n    synchronize_now()\n  })\n}\n\nfunction stop_synchronization() {\n  chrome.storage.local.set(\n    { wd_gd_sync_enabled: false },\n    display_sync_interface,\n  )\n}\n\nfunction process_test_warnings() {\n  chrome.management.getPermissionWarningsByManifest(prompt(), console.log)\n}\n\nfunction process_get_dbg() {\n  const storage_key = document.getElementById('getFromStorageKey').value\n  chrome.storage.local.get([storage_key], function (result) {\n    const storage_value = result[storage_key]\n    console.log(`key: ${storage_key}; value: ${JSON.stringify(storage_value)}`)\n  })\n}\n\nfunction process_set_dbg() {\n  console.log('processing dbg')\n  const storage_key = document.getElementById('setToStorageKey').value\n  let storage_value = document.getElementById('setToStorageVal').value\n  if (storage_value === 'undefined') {\n    storage_value = undefined\n  } else {\n    storage_value = JSON.parse(storage_value)\n  }\n  console.log(`storage_key:${storage_key}, storage_value:${storage_value}`)\n  chrome.storage.local.set({ [storage_key]: storage_value }, function () {\n    const last_error = chrome.runtime.lastError\n    console.log(`last_error:${last_error}`)\n    console.log('finished setting value')\n  })\n}\n\nfunction process_export() {\n  chrome.storage.local.get(['wd_user_vocabulary'], function (result) {\n    const user_vocabulary = result.wd_user_vocabulary\n    const keys = []\n    Object.keys(user_vocabulary).forEach((key) => {\n      if (user_vocabulary.hasOwnProperty(key)) {\n        keys.push(key)\n      }\n    })\n    const file_content = keys.join('\\r\\n')\n    const blob = new Blob([file_content], { type: 'text/plain;charset=utf-8' })\n    saveAs(blob, 'my_vocabulary.txt', true)\n  })\n}\n\nfunction process_import() {\n  chrome.tabs.create(\n    { url: chrome.runtime.getURL('import.html') },\n    function (tab) {},\n  )\n}\n\nfunction highlight_example_text(hl_params, text_id, lq_id, rq_id) {\n  document.getElementById(lq_id).textContent = ''\n  document.getElementById(rq_id).textContent = ''\n  document.getElementById(lq_id).style = undefined\n  document.getElementById(rq_id).style = undefined\n  document.getElementById(text_id).style = make_hl_style(hl_params)\n}\n\nfunction show_rb_states(ids, color) {\n  for (let i = 0; i < ids.length; i++) {\n    const doc_element = document.getElementById(ids[i])\n    if (doc_element.label.style.backgroundColor === color) {\n      doc_element.checked = true\n    }\n  }\n}\n\nfunction process_test_old_dict(e) {\n  const button = e.target\n  const btn_id = button.id\n  if (!btn_id.startsWith('testDictBtn_')) return\n  const btn_no = parseInt(btn_id.split('_')[1], 10)\n  const url = `${wd_online_dicts[btn_no].url}test`\n  chrome.tabs.create({ url }, function (tab) {})\n}\n\nfunction process_delete_old_dict(e) {\n  const button = e.target\n  const btn_id = button.id\n  if (!btn_id.startsWith('delDict')) return\n  const btn_no = parseInt(btn_id.split('_')[1], 10)\n  wd_online_dicts.splice(btn_no, 1)\n  chrome.storage.local.set({ wd_online_dicts })\n  initContextMenus(wd_online_dicts)\n  show_user_dicts()\n}\n\nfunction show_user_dicts() {\n  const dicts_block = document.getElementById('existingDictsBlock')\n  while (dicts_block.firstChild) {\n    dicts_block.removeChild(dicts_block.firstChild)\n  }\n  const dictPairs = wd_online_dicts\n  for (let i = 0; i < dictPairs.length; ++i) {\n    const nameSpan = document.createElement('span')\n    nameSpan.setAttribute('class', 'existingDictName')\n    nameSpan.textContent = dictPairs[i].title\n    dicts_block.appendChild(nameSpan)\n\n    const urlInput = document.createElement('input')\n    urlInput.setAttribute('type', 'text')\n    urlInput.setAttribute('class', 'existingDictUrl')\n    urlInput.setAttribute('value', dictPairs[i].url)\n    urlInput.readOnly = true\n    dicts_block.appendChild(urlInput)\n\n    const testButton = document.createElement('button')\n    testButton.setAttribute('class', 'shortButton')\n    testButton.id = `testDictBtn_${i}`\n    testButton.textContent = 'Test'\n    testButton.addEventListener('click', process_test_old_dict)\n    dicts_block.appendChild(testButton)\n\n    const deleteButton = document.createElement('button')\n    deleteButton.setAttribute('class', 'imgButton')\n    deleteButton.id = `delDictBtn_${i}`\n    const img = document.createElement('img')\n    img.setAttribute('src', '../assets/delete.png')\n    img.id = `delDictImg_${i}`\n    deleteButton.appendChild(img)\n    deleteButton.addEventListener('click', process_delete_old_dict)\n    dicts_block.appendChild(deleteButton)\n\n    dicts_block.appendChild(document.createElement('br'))\n  }\n}\n\nfunction process_add_dict() {\n  let dictName = document.getElementById('addDictName').value\n  let dictUrl = document.getElementById('addDictUrl').value\n  dictName = dictName.trim()\n  dictUrl = dictUrl.trim()\n  if (!dictName || !dictUrl) return\n  wd_online_dicts.push({ title: dictName, url: dictUrl })\n  chrome.storage.local.set({ wd_online_dicts })\n  initContextMenus(wd_online_dicts)\n  show_user_dicts()\n  document.getElementById('addDictName').value = ''\n  document.getElementById('addDictUrl').value = ''\n}\n\nfunction process_test_new_dict() {\n  let dictUrl = document.getElementById('addDictUrl').value\n  dictUrl = dictUrl.trim()\n  if (!dictUrl) return\n  const url = `${dictUrl}test`\n  chrome.tabs.create({ url }, function (tab) {})\n}\n\nfunction show_internal_state() {\n  const word_hl_params = wd_hl_settings.wordParams\n  const idiom_hl_params = wd_hl_settings.idiomParams\n\n  document.getElementById('wordsEnabled').checked = word_hl_params.enabled\n  document.getElementById('idiomsEnabled').checked = idiom_hl_params.enabled\n  document.getElementById('wordsBlock').style.display = word_hl_params.enabled\n    ? 'block'\n    : 'none'\n  document.getElementById('idiomsBlock').style.display = idiom_hl_params.enabled\n    ? 'block'\n    : 'none'\n\n  document.getElementById('wordsBold').checked = word_hl_params.bold\n  document.getElementById('idiomsBold').checked = idiom_hl_params.bold\n\n  document.getElementById('wordsBackground').checked =\n    word_hl_params.useBackground\n  document.getElementById('idiomsBackground').checked =\n    idiom_hl_params.useBackground\n\n  document.getElementById('wordsColor').checked = word_hl_params.useColor\n  document.getElementById('idiomsColor').checked = idiom_hl_params.useColor\n\n  document.getElementById('pronunciationEnabled').checked = wd_enable_tts\n\n  document.getElementById('wcRadioBlock').style.display =\n    word_hl_params.useColor ? 'block' : 'none'\n  show_rb_states(wc_rb_ids, word_hl_params.color)\n  document.getElementById('icRadioBlock').style.display =\n    idiom_hl_params.useColor ? 'block' : 'none'\n  show_rb_states(ic_rb_ids, idiom_hl_params.color)\n  document.getElementById('wbRadioBlock').style.display =\n    word_hl_params.useBackground ? 'block' : 'none'\n  show_rb_states(wb_rb_ids, word_hl_params.backgroundColor)\n  document.getElementById('ibRadioBlock').style.display =\n    idiom_hl_params.useBackground ? 'block' : 'none'\n  show_rb_states(ib_rb_ids, idiom_hl_params.backgroundColor)\n\n  for (let t = 0; t < target_types.length; t++) {\n    const ttype = target_types[t]\n    for (let i = 0; i < hover_popup_types.length; i++) {\n      const is_hit =\n        hover_popup_types[i] === wd_hover_settings[`${ttype}_hover`]\n      document.getElementById(`${ttype}b_${hover_popup_types[i]}`).checked =\n        is_hit\n    }\n  }\n\n  highlight_example_text(word_hl_params, 'wordHlText', 'wql', 'wqr')\n  highlight_example_text(idiom_hl_params, 'idiomHlText', 'iql', 'iqr')\n  show_user_dicts()\n}\n\nfunction add_cb_event_listener(id, dst_params, dst_key) {\n  document.getElementById(id).addEventListener('click', function () {\n    const checkboxElem = document.getElementById(id)\n    if (checkboxElem.checked) {\n      dst_params[dst_key] = true\n    } else {\n      dst_params[dst_key] = false\n    }\n    show_internal_state()\n  })\n}\n\nfunction process_rb(dst_params, dst_key, ids) {\n  for (let i = 0; i < ids.length; i++) {\n    const doc_element = document.getElementById(ids[i])\n    if (doc_element.checked) {\n      dst_params[dst_key] = doc_element.label.style.backgroundColor\n    }\n  }\n  show_internal_state()\n}\n\nfunction handle_rb_loop(ids, dst_params, dst_key) {\n  for (let i = 0; i < ids.length; i++) {\n    document.getElementById(ids[i]).addEventListener('click', function () {\n      process_rb(dst_params, dst_key, ids)\n    })\n  }\n}\n\nfunction assign_back_labels() {\n  const labels = document.getElementsByTagName('LABEL')\n  for (let i = 0; i < labels.length; i++) {\n    if (labels[i].htmlFor !== '') {\n      const elem = document.getElementById(labels[i].htmlFor)\n      if (elem) elem.label = labels[i]\n    }\n  }\n}\n\nfunction hover_rb_handler() {\n  for (let t = 0; t < target_types.length; t++) {\n    const ttype = target_types[t]\n    for (let i = 0; i < hover_popup_types.length; i++) {\n      const element_id = `${ttype}b_${hover_popup_types[i]}`\n      const param_key = `${ttype}_hover`\n      const rbElem = document.getElementById(element_id)\n      if (rbElem.checked) {\n        wd_hover_settings[param_key] = hover_popup_types[i]\n      }\n    }\n  }\n  chrome.storage.local.set({ wd_hover_settings })\n}\n\nfunction add_hover_rb_listeners() {\n  for (let t = 0; t < target_types.length; t++) {\n    for (let i = 0; i < hover_popup_types.length; i++) {\n      const element_id = `${target_types[t]}b_${hover_popup_types[i]}`\n      document\n        .getElementById(element_id)\n        .addEventListener('click', hover_rb_handler)\n    }\n  }\n}\n\nfunction process_display() {\n  window.onload = function () {\n    chrome.storage.local.get(\n      [\n        'wd_hl_settings',\n        'wd_hover_settings',\n        'wd_online_dicts',\n        'wd_developer_mode',\n        'wd_enable_tts',\n      ],\n      function (result) {\n        assign_back_labels()\n        wd_hl_settings = result.wd_hl_settings\n        wd_hover_settings = result.wd_hover_settings\n        wd_online_dicts = result.wd_online_dicts\n        wd_enable_tts = !!result.wd_enable_tts\n\n        const { wd_developer_mode } = result\n\n        // TODO fix this monstrosity using this wrapper-function hack:\n        // http://stackoverflow.com/questions/7053965/when-using-callbacks-inside-a-loop-in-javascript-is-there-any-way-to-save-a-var\n        handle_rb_loop(wc_rb_ids, wd_hl_settings.wordParams, 'color')\n        handle_rb_loop(ic_rb_ids, wd_hl_settings.idiomParams, 'color')\n        handle_rb_loop(wb_rb_ids, wd_hl_settings.wordParams, 'backgroundColor')\n        handle_rb_loop(ib_rb_ids, wd_hl_settings.idiomParams, 'backgroundColor')\n\n        add_cb_event_listener(\n          'wordsEnabled',\n          wd_hl_settings.wordParams,\n          'enabled',\n        )\n        add_cb_event_listener(\n          'idiomsEnabled',\n          wd_hl_settings.idiomParams,\n          'enabled',\n        )\n        add_cb_event_listener('wordsBold', wd_hl_settings.wordParams, 'bold')\n        add_cb_event_listener('idiomsBold', wd_hl_settings.idiomParams, 'bold')\n        add_cb_event_listener(\n          'wordsBackground',\n          wd_hl_settings.wordParams,\n          'useBackground',\n        )\n        add_cb_event_listener(\n          'idiomsBackground',\n          wd_hl_settings.idiomParams,\n          'useBackground',\n        )\n        add_cb_event_listener(\n          'wordsColor',\n          wd_hl_settings.wordParams,\n          'useColor',\n        )\n        add_cb_event_listener(\n          'idiomsColor',\n          wd_hl_settings.idiomParams,\n          'useColor',\n        )\n\n        add_hover_rb_listeners()\n\n        if (wd_developer_mode) {\n          document.getElementById('debugControl').style.display = 'block'\n        }\n\n        document\n          .getElementById('gdSyncButton')\n          .addEventListener('click', request_permissions_and_sync)\n        document\n          .getElementById('gdStopSyncButton')\n          .addEventListener('click', stop_synchronization)\n\n        document\n          .getElementById('saveVocab')\n          .addEventListener('click', process_export)\n        document\n          .getElementById('loadVocab')\n          .addEventListener('click', process_import)\n\n        document\n          .getElementById('getFromStorageBtn')\n          .addEventListener('click', process_get_dbg)\n        document\n          .getElementById('setToStorageBtn')\n          .addEventListener('click', process_set_dbg)\n\n        document\n          .getElementById('testManifestWarningsBtn')\n          .addEventListener('click', process_test_warnings)\n\n        document\n          .getElementById('addDict')\n          .addEventListener('click', process_add_dict)\n        document\n          .getElementById('testNewDict')\n          .addEventListener('click', process_test_new_dict)\n\n        document.getElementById('moreInfoLink').href =\n          chrome.runtime.getURL('sync_help.html')\n\n        document\n          .getElementById('saveVisuals')\n          .addEventListener('click', function () {\n            chrome.storage.local.set({ wd_hl_settings })\n          })\n\n        document\n          .getElementById('defaultDicts')\n          .addEventListener('click', function () {\n            wd_online_dicts = make_default_online_dicts()\n            chrome.storage.local.set({ wd_online_dicts })\n            initContextMenus(wd_online_dicts)\n            show_user_dicts()\n          })\n\n        document\n          .getElementById('pronunciationEnabled')\n          .addEventListener('click', function (e) {\n            wd_enable_tts = e.target.checked\n            chrome.storage.local.set({ wd_enable_tts })\n          })\n\n        display_sync_interface()\n        show_internal_state()\n      },\n    )\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  localizeHtmlPage()\n  process_display()\n})\n"],"names":[],"sourceRoot":""}